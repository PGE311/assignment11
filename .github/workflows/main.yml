on: 
  push:
    branches: [master]
jobs:
  test:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Get assignment name"
        shell: bash -l {0}
        run: |
          echo "ASSIGNMENT=$(echo $GITHUB_REPOSITORY | cut -d/ -f2 | cut -d- -f1)" >> $GITHUB_ENV;
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Fetch environment file
        shell: bash -l {0}
        run: |
          curl \
          --header 'Authorization: token ${{secrets.PGE311_SECRET_TOKEN}}' \
          --header 'Accept: application/vnd.github.v3.raw' \
          -O --location "https://api.github.com/repos/PGE311/${ASSIGNMENT}-solution/contents/environment.yml"
      - name: Fetch Tests 
        shell: bash -l {0}
        run: |
          curl \
          --header 'Authorization: token ${{secrets.PGE311_SECRET_TOKEN}}' \
          --header 'Accept: application/vnd.github.v3.raw' \
          -O --location "https://api.github.com/repos/PGE311/${ASSIGNMENT}-solution/contents/test.py"
      - name: Fetch data
        shell: bash -l {0}
        run: |
          curl \
          --header 'Authorization: token ${{secrets.PGE311_SECRET_TOKEN}}' \
          --header 'Accept: application/vnd.github.v3.raw' \
          -O --location "https://api.github.com/repos/PGE311/${ASSIGNMENT}-solution/contents/eog_wells_in_{tx,nd}.csv"
      - name: Fetch gold files
        shell: bash -l {0}
        run: |
          cd images;
          curl \
          --header 'Authorization: token ${{secrets.PGE311_SECRET_TOKEN}}' \
          --header 'Accept: application/vnd.github.v3.raw' \
          -O --location "https://api.github.com/repos/PGE311/${ASSIGNMENT}-solution/contents/images/eog_wells_in_{tx,nd}_gold.png"
      - uses:  mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
      - name: Install Firefox and geckodriver
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox
          wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
          tar -xvzf geckodriver-v0.26.0-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/
      - name: Run Tests 
        shell: bash -l {0}
        run: python -m unittest test.py -vvv
